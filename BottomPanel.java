import java.awt.*;import java.awt.event.*;import javax.swing.*;// This class creates a panel containing the the user's cards and money, the bet// and fold buttons, and a JTextArea infoBox.public class BottomPanel extends PlayerPanel {	// JLabel displays how much money user currently has in the hole	private JLabel userMoney;		// JTextArea prints out various messages pertaining to the current	// state of the game	private JTextArea infoBox;		// BottomButtonPanel holds and manages the 'bet' and 'fold' buttons	public BottomButtonPanel buttonPanel;	// MainPokerWindow links back to the main window	private MainPokerWindow parentWindow;		// Constructor creates new BottomPanel object (should be called only once).	BottomPanel (MainPokerWindow par) {		super ();		parentWindow = par;				setBackground (Color.black);		setLayout (new GridLayout (2, 2));							JPanel textPanel = new JPanel ();			textPanel.setBackground (Color.black);			textPanel.setLayout (new BorderLayout ());			add (textPanel);						infoBox = new JTextArea ("Welcome!");				infoBox.setBorder (BorderFactory.createEmptyBorder(10,10,10,10));				infoBox.setLineWrap (true);				infoBox.setWrapStyleWord (true);				infoBox.setEditable (false);				textPanel.add (infoBox, BorderLayout.CENTER);								JPanel cardPanel = new JPanel ();			cardPanel.setBackground (Color.black);			cardPanel.setLayout (new FlowLayout ());			add (cardPanel);								ImageIcon spacer = new ImageIcon ("cards/cardspacer.jpg");				JLabel spacerLabel = new JLabel (spacer);				cardPanel.add (spacerLabel);								for (int i=0; i<2; i++){					card[i] = new CardImage ();					card[i].setVisible (false);					cardPanel.add (card[i]);				}					buttonPanel = new BottomButtonPanel (parentWindow);			add (buttonPanel);												userMoney = new JLabel ( "Your Money:  $" + 1000, JLabel.CENTER );			userMoney.setForeground (Color.white);			add (userMoney);			}	// This method alters JLabel userMoney to display the amount of money given in	// the parameter newMoney.	public void setNewMoney (int newMoney) {			userMoney.setText ( "Your Money:  $" + newMoney );			}		// sets infoBox's text to whatever's in the parameter	public void setText (String newText) {			infoBox.setText (newText);		}			// appends to infoBox's text whatever's in the parameter	public void appendText (String newText) {			infoBox.append (newText);		}	}